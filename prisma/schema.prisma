generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  clerkId           String              @unique
  email             String              @unique
  mobileNum         String?             @unique
  isAdmin           Boolean             @default(false)
  avatarUrl         String?
  userCoins         Int?                @default(0)
  aadharCardUrl     String?
  certificateUrl    String[]
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  country           String?             @default("")
  lastName          String
  userName          String              @unique
  role              String
  firstName         String
  course            Course[]
  userCreatedCourse userCreatedCourse[]
  signUpCompleted   Boolean             @default(false)
}

model Course {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title     String
  thumbnail String
  like      Int      @default(0)
  dislike   Int      @default(0)
  adminId   String   @db.Uuid
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [adminId], references: [id])
  videos    Video[]
}

model Video {
  id       String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title    String
  url      String
  courseId String @db.Uuid
  course   Course @relation(fields: [courseId], references: [id])
}

model Comments {
  id      String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  text    String
  userId  String @db.Uuid
  like    Int    @default(0)
  dislike Int    @default(0)
}

model Vnotes {
  id     String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userId String @db.Uuid
}

model userCreatedCourse {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userId    String   @db.Uuid
  title     String   @unique
  resources String[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  content   Json?
  user      User     @relation(fields: [userId], references: [id])
}
